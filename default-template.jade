// Copyright 2014, Digium, Inc.
// All rights reserved.
//
// This source code is licensed under The MIT License found in the
// LICENSE file in the root directory of this source tree.
//
// For all details and documentation:  https://www.respoke.io

- var subTitle = comments[0].ctx.file.input;
- var title = className;

doctype html
html
  head
    title=title + ' - ' + subTitle
    link(
        rel="stylesheet"
        type="text/css"
        href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css"
    )
    link(
        rel="stylesheet"
        type="text/css"
        href="https://highlightjs.org/static/styles/github.css"
    )
    script(src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js")
    script(src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js")
    script(src="https://highlightjs.org/static/highlight.pack.js")
    script.
      hljs.initHighlightingOnLoad();
  body
    .container
      h3.help-block= subTitle
      hr
      h1= title

      each comment, indx in comments
        if (!comment.ignore && !comment.isPrivate)
          
            - var name = comment.ctx.name ? comment.ctx.name : comment.description.summary;
            - var id = name.replace(/[^a-z0-9]/gi,'-');
            .comment(id=id)
              if (indx === 0)
                != comment.description.summary
                
              else
                //- the title of the method or prop
                h3
                  code= comment.type || comment.ctx.type
                  a.bold(href="#" + id)
                      if (comment.ctx.name)
                          = comment.ctx.name
                      else 
                          != comment.description.summary
                != comment.ctx.name ? comment.description.summary : ''
              
              
              if (comment.returns)
                  p: strong returns
                      code= comment.returns || "undefined"


              //- info about the method or prop
              if (comment.augments)
                p: strong extends&nbsp;
                    code= comment.augments

              if (comment.fires && comment.fires.length)
                p
                  strong fires
                  code= comment.fires.map(function(f){ return f.replace(className + '#','') }).join('|')

              if (comment.auth)
                p
                  strong Authorization
                  | &nbsp;&nbsp;
                  each meth in comment.auth
                    span.label.label-default= meth
                    | &nbsp;

              div!= comment.description.body

              //- Arguments
              - var args = comment.tags.filter(function (t) { return t.type === 'param' || t.type === 'arg'; });
              if (args.length)
                br
                h4 Arguments

                .row.hidden-xs.param
                  .col-sm-4 Name
                  .col-sm-3 Type
                  .col-sm-5

                each param in args
                  .row.param
                    .col-sm-4: code= param.name
                    .col-sm-3: strong= param.type
                    .col-sm-5= param.desc
                  br.visible-xs
              br

              //-
              //- Uncomment for devving!!!
              //-
              a(href="javascript:void(0)" onclick="this.nextSibling.style.display = this.nextSibling.style.display == 'block' ? 'none' : 'block'") JSON
              pre(style="display:none")
                code=JSON.stringify(comment, null, 4)

  br
  br
  br
  br
  br
  br
  br
